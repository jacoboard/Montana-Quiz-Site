{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\John\\\\Desktop\\\\School\\\\CSCI\\\\CSCI 331\\\\New folder\\\\Montana-Quiz-Site\\\\Quiz\\\\client\\\\src\\\\components\\\\Posts\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Paper, FormControlLabel, Switch } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nconst headCells = [{\n  id: 'name',\n  label: 'Name',\n  width: '33%'\n}, {\n  id: 'score',\n  label: 'Score',\n  width: '33%',\n  align: 'center',\n  format: value => value.toFixed()\n}, {\n  id: 'time',\n  label: 'Time',\n  width: '33%',\n  align: 'right',\n  format: value => value.toFixed()\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.align,\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : 'asc',\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(Box, {\n            component: \"span\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 19\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n\n_c = EnhancedTableHead;\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nexport default function EnhancedTable() {\n  _s();\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const posts = useSelector(state => state.posts);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  }; // Avoid a layout jump when reaching the last page with empty rows.\n\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - posts.length) : 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          sx: {\n            minWidth: 750\n          },\n          \"aria-labelledby\": \"tableTitle\",\n          size: dense ? 'small' : 'medium',\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            order: order,\n            orderBy: orderBy,\n            onRequestSort: handleRequestSort,\n            rowCount: posts.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [posts.slice().sort(getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                tabIndex: -1,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: row.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: row.score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: row.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 25\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 23\n              }, this);\n            }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              style: {\n                height: (dense ? 33 : 53) * emptyRows\n              },\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 6\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: posts.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        checked: dense,\n        onChange: handleChangeDense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 20\n      }, this),\n      label: \"Dense padding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EnhancedTable, \"YcMSnykIcDwmOQCbemncKxtn4Go=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = EnhancedTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTable\");","map":{"version":3,"sources":["C:/Users/John/Desktop/School/CSCI/CSCI 331/New folder/Montana-Quiz-Site/Quiz/client/src/components/Posts/Posts.js"],"names":["React","PropTypes","Box","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Paper","FormControlLabel","Switch","useSelector","descendingComparator","a","b","orderBy","getComparator","order","headCells","id","label","width","align","format","value","toFixed","EnhancedTableHead","props","onRequestSort","createSortHandler","property","event","map","headCell","propTypes","func","isRequired","oneOf","string","rowCount","number","EnhancedTable","setOrder","useState","setOrderBy","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","posts","state","handleRequestSort","isAsc","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","handleChangeDense","checked","emptyRows","Math","max","length","mb","minWidth","slice","sort","row","index","labelId","name","score","time","height"],"mappings":"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","sourcesContent":["\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TableSortLabel, Paper, FormControlLabel, Switch } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\n  \r\n  function descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  function getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n  }\r\n  \r\n  const headCells = [\r\n    { id: 'name', label: 'Name', width: '33%',},\r\n    {\r\n        id: 'score',\r\n        label: 'Score',\r\n        width: '33%',\r\n        align: 'center',\r\n        format: (value) => value.toFixed(),\r\n    },\r\n    {\r\n        id: 'time',\r\n        label: 'Time',\r\n        width: '33%',\r\n        align: 'right',\r\n        format: (value) => value.toFixed(),\r\n    },\r\n  ];\r\n  \r\n  function EnhancedTableHead(props) {\r\n    const { order, orderBy, onRequestSort } =\r\n      props;\r\n    const createSortHandler = (property) => (event) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  \r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          {headCells.map((headCell) => (\r\n            <TableCell\r\n              key={headCell.id}\r\n              align={headCell.align}\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'asc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {headCell.label}\r\n                {orderBy === headCell.id ? (\r\n                  <Box component=\"span\">\r\n                  </Box>\r\n                ) : null}\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n  \r\n  EnhancedTableHead.propTypes = {\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    rowCount: PropTypes.number.isRequired,\r\n  };\r\n  \r\n  export default function EnhancedTable() {\r\n    const [order, setOrder] = React.useState('asc');\r\n    const [orderBy, setOrderBy] = React.useState('calories');\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const posts = useSelector((state) => state.posts)\r\n  \r\n    const handleRequestSort = (event, property) => {\r\n      const isAsc = orderBy === property && order === 'asc';\r\n      setOrder(isAsc ? 'desc' : 'asc');\r\n      setOrderBy(property);\r\n    };\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(parseInt(event.target.value, 10));\r\n      setPage(0);\r\n    };\r\n  \r\n    const handleChangeDense = (event) => {\r\n      setDense(event.target.checked);\r\n    };\r\n  \r\n    // Avoid a layout jump when reaching the last page with empty rows.\r\n    const emptyRows =\r\n      page > 0 ? Math.max(0, (1 + page) * rowsPerPage - posts.length) : 0;\r\n  \r\n    return (\r\n      <Box sx={{ width: '100%' }}>\r\n        <Paper sx={{ width: '100%', mb: 2 }}>\r\n          <TableContainer>\r\n            <Table\r\n              sx={{ minWidth: 750 }}\r\n              aria-labelledby=\"tableTitle\"\r\n              size={dense ? 'small' : 'medium'}\r\n            >\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n                rowCount={posts.length}\r\n              />\r\n              <TableBody>\r\n                {posts.slice().sort(getComparator(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row, index) => {\r\n                    const labelId = `enhanced-table-checkbox-${index}`;\r\n  \r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        tabIndex={-1}\r\n                        key={row.name}\r\n                      >\r\n                        <TableCell align=\"left\">{row.name}</TableCell>\r\n                        <TableCell align=\"center\">{row.score}</TableCell>\r\n                        <TableCell align=\"right\">{row.time}</TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow\r\n                    style={{\r\n                      height: (dense ? 33 : 53) * emptyRows,\r\n                    }}\r\n                  >\r\n                    <TableCell colSpan={6} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 100]}\r\n            component=\"div\"\r\n            count={posts.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n        <FormControlLabel\r\n          control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n          label=\"Dense padding\"\r\n        />\r\n      </Box>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}